---
sudo: required

env:
  - ansible: 1.9.6
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.0.2.0
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.1.0.0
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""

services:
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version}.ansible-${ansible} --tag=${distribution}-${version}:ansible-${ansible} tests'

script:
  - container_id=$(mktemp)
    # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible-${ansible} "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Small tests for workings of role.
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm grep "user1" /etc/shadow
    && (echo 'User created' && exit 0)
    || (echo 'User not created' && exit 1)
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm test -d /home/user1/test1
    && (echo 'Directory created' && exit 0)
    || (echo 'Directory not created' && exit 1)

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  slack:
    secure: wA4HlJJK02UBl3cw0kXMXmSl3c5y/mtRQD94fTVXkQ7O9OSg4fShZt6NsNuM7lKNjfV/2XXL4/IYsEfQSCj9NMcLpeB2r9zTWHvOrkqJDBoB1/LBQaYRNo8OmF9HrgB1wt/DA6Xflj0B24Blm8aPnTiJpO4o/OceT9i7z40jSV7Fiy9onCri8SDQ97T+m/Ro33JURg+O2WYyHFajWmbb0+qEtpg5F5U4SfjmfcAwS1HvVhVunLoYyjUUEzdEFne1eDmt0v3GINpjjbpR4VrjRuvMo5IjiYUOO9XLIEvMp++rYEdssI5cmvM8DCnITv41egxQGObpEATORPyiuz87aR+BaS1aHe1pVBdMuuuyGfXBaoyxsN5z/dJoQzUA2o04fIvMK+BfeZ83fFfU9vpMMBYL9YxMcxn617y/XOp/LxV4PIKHnj6Ibo4FpBWIy+7rckaB9M4Z3gAYrAT/llMpFluu6u36hwTk3ivrPu++by9ZRY2TbH8nWV40fHdRPTjaRwvepthySVQt4yhYabyzhfJ257KzCpTKQe9OgNY6iSI1wOK9js3PmeB20jDrJBdKx8ftdmGMAe9WUvmKNSLWyyT+wSWw3bzt0UZ8Jk+ztKYIU1vbwXnnH6iggg9MriGUB8/gcACVdkJHawW5L4ip8DrRjliE0NSJwMQ1uillfxI=

